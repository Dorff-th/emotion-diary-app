name: Deploy Spring Boot + React to S3 and EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: 📦 Checkout source code
      uses: actions/checkout@v3

    # 1. FRONTEND BUILD & DEPLOY TO S3
    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: 📝 Create .env.production
      working-directory: ./frontend-react
      run: |
        echo "VITE_API_BASE_URL=http://3.34.129.211:8080/api" > .env.production

    - name: 🔧 Install and build frontend
      working-directory: ./frontend-react
      run: |
        npm ci
        npm run build

    - name: ☁️ Upload frontend to S3
      run: |
        aws s3 sync ./frontend-react/dist s3://${{ secrets.AWS_S3_BUCKET_NAME }} --region ap-northeast-2 --delete
        aws s3 website s3://${{ secrets.AWS_S3_BUCKET_NAME }} --index-document index.html --error-document index.html
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    # 2. BACKEND BUILD
    - name: ☕ Setup Java
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: 📄 Create application-prod.yml
      run: |
        echo "${{ secrets.APPLICATION_PROD_YML }}" > ./backend/src/main/resources/application-prod.yml

    - name: 🛠️ Build Spring Boot App
      working-directory: ./backend
      run: |
        chmod +x gradlew
        ./gradlew clean build -x test

    # 3. DEPLOY JAR TO EC2
    - name: 🔐 Restore EC2 SSH Key
      run: |
        echo "${{ secrets.EC2_SSH_KEY }}" | base64 -d > ec2-key.pem
        chmod 600 ec2-key.pem

    - name: 📤 Copy JAR to EC2
      run: |
        JAR_NAME=$(ls ./backend/build/libs/*.jar | head -n 1)
        scp -i ec2-key.pem -o StrictHostKeyChecking=no "$JAR_NAME" ec2-user@${{ secrets.EC2_HOST }}:/home/ec2-user/emotion-diary-backend-0.0.1-SNAPSHOT.jar

    - name: 🚀 Restart Spring Boot App on EC2
      run: |
        ssh -i ec2-key.pem -o StrictHostKeyChecking=no ec2-user@${{ secrets.EC2_HOST }} << 'EOF'
        echo "🔍 Stopping previous app (if running)..."
        PID=\$(lsof -ti:8080)
        if [ -n "\$PID" ]; then
        kill -9 \$PID
        echo "✅ Stopped process \$PID"
        else
        echo "ℹ️ No running process found on port 8080"
        fi

        echo "🚀 Starting Spring Boot application..."
        nohup java -jar /home/ec2-user/emotion-diary-backend-0.0.1-SNAPSHOT.jar --spring.profiles.active=prod --server.address=0.0.0.0 --server.port=8080 > /home/ec2-user/app.log 2>&1 &
        EOF
